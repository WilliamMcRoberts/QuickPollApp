
<input 
    type="text" 
    @bind="@_searchText"
    @bind:event="oninput"
    @bind:after="OnSearchInput"
    placeholder="🔍 Search" 
    />

@code {

    private string _searchText = string.Empty;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public EventCallback<IEnumerable<PollModel>> HandleSearchInput { get; set; }

    [Parameter]
    public List<PollModel> AllPolls { get; set; }

    private async Task OnSearchInput()
    {
        if (string.IsNullOrWhiteSpace(_searchText))
        {
            await HandleSearchInput.InvokeAsync(AllPolls);
            return;
        }

        var output = AllPolls.Where(p => p.Question.Contains(_searchText.Trim(), StringComparison.InvariantCultureIgnoreCase) 
                    || p.PollId.ToString().Contains(_searchText.Trim(), StringComparison.InvariantCultureIgnoreCase));

        await HandleSearchInput.InvokeAsync(output);
    }
}

<style>

    input {
        letter-spacing: 2px;
        text-align:center;
        border-radius: 50px;
        border: transparent;
        padding: 5px;
        font-weight: 700;
        box-shadow: 2px 4px 10px  rgba(0, 0, 0, 0.8);
        color: #BF40BF;
    }

    input:focus {
        outline-style: none;
    }

    @@media(max-width: 890px) {
        input {
            width: 50%;
        }
    }

</style>
